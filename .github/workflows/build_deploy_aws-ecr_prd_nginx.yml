on:
  push:
    tags:
      - v[12].[0-9]+.[0-9]+
    paths:
      - 'app/front-end/**'
  workflow_dispatch:
    tags:
      - v[12].[0-9]+.[0-9]+
    paths:
      - 'app/front-end/**'

name: nginx-app-prd

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: 'app/front-end/nginx-app/'
      commitmsg: ${{ github.event.head_commit.message }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: get commit message
        run: |
            echo Commit MSG = ${{ env.commitmsg }}

    - name: set the head commit message as env
      run: |
         echo '::set-env name=commitmsg::${{ github.event.head_commit.message }}'
      
    - name: get commit message
      run: |
         echo Commit MSG = $commitmsg

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set outputs
      id: vars
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Check outputs
      run: |
           echo $RELEASE_VERSION
           echo ${{ env.RELEASE_VERSION }}

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME_NGINX }}
        #IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        VERSION: ${{ env.RELEASE_VERSION }}
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION"