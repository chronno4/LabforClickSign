on:
  push:
    branches:
      - main
      - master
    paths:
      - 'app/front-end/**'
  workflow_dispatch:
    branches:
      - main
      - master
    paths:
      - 'app/front-end/**'

name: nginx-app-snapshot-dev

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: 'app/front-end/nginx-app/'
      VERSION: '$(cat version)'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:      
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
    
    - name: Version file
      run: |
        ls -las
        pwd
        ls -las
        export VERSION=$(cat version)
        echo $VERSION
        echo "VERSION=$(cat version)" >> $VERSION

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME_NGINX_SNAPSHOT }}
        #IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        VERSION: ${{ cat version }}
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION-$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION-$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION-$IMAGE_TAG"
    - name: Deploy AWS ECS
      env:
        TOKEN: ${{ secrets.ACCESS_TOKEN }}
        VERSION: $(cat version)
        VARNAME: nginx-app_image_version
        USER: ${{ secrets.USER_GIT }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        PROJECT: ${{ github.repository }}
      run: |
        git config --global url."https://${TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
        git clone -b main https://${USER}:${TOKEN}@github.com/chronno4/LabforClickSign.git
        cd LabforClickSign/iac/ && sed -i "/${VARNAME}/{n;s/\"[0-9].*/\"${VERSION}-${IMAGE_TAG}\"/}" variables.tf
        git config --global user.email "${EMAIL}"
        git config --global user.name "${USER}"
        git add variables.tf
        git commit -m "Update ${VARNAME} ${VERSION}-${IMAGE_TAG} version"
        git push