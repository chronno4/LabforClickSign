on:
  push:
    tags:
      - v[12].[0-9]+.[0-9]+
    paths:
      - 'app/back-end/**'
  workflow_dispatch:
    tags:
      - v[12].[0-9]+.[0-9]+
    paths:
      - 'app/back-end/**'

name: rails-app-prd
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: 'app/back-end/rails-app/'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}

    - name: GitHub Tag Name
      run: |
        echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "Tag name from github.ref_name: ${{  github.ref_name }}"



    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME_RAILS }}
        #IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        VERSION: ${{  github.ref_name }}
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION"

    - name: Deploy AWS ECS
      env:
        TOKEN: ${{ secrets.ACCESS_TOKEN }}
        VERSION: ${{  github.ref_name }}
        VARNAME: rails-app_image_version
        USER: ${{ secrets.USER_GIT }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        PROJECT: ${{ github.repository }}
        REPO_URL: ${{ secrets.REPO_URL }}
      run: |
        git config --global url."https://${TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
        git clone https://${USER}:${TOKEN}@${REPO_URL}
        cd LabforClickSign/iac/ && sed -i "/${VARNAME}/{n;s/\"[0-9].*/\"${VERSION}\"/}" variables.tf
        git config --global user.email "${EMAIL}"
        git config --global user.name "${USER}"
        git tag iac-${VERSION}
        git push origin iac-${VERSION}
 